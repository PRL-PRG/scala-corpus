syntax = "proto2";

package cz.cvut.fit.prl.scala.implicits.model;

enum Language {
    UNKNOWN_LANGUAGE = 0;
    SCALA = 1;
    JAVA = 2;
}

message Position {
    required int32 startLine = 1;
    required int32 startCol = 2;
    required int32 endLine = 3;
    required int32 endCol = 4;
}

message Location {
    // a relative path
    // to a directory (e.g., src/main/scala, target/scala-2.12/classes) or
    // to a jar file (.ivy/cache/../..jar)
    required string path = 1;
    // the relative path within the path, for example within a jar file
    required string relativeUri = 2;
    // position, in case it is a source path
    optional Position position = 3;
}

message PathEntry {
    oneof sealed_value {
        SourcepathEntry source_path = 1;
        ClasspathEntry class_path = 2;
    }
}

// a source path entry as defined in sbt sourceDirectories and sourcesInRoot
message SourcepathEntry {
    // a relative path to a source directory starting at the repository root
    required string path = 1;
    // compile or test
    required string scope = 2;
    // true for a managed source path
    required bool managed = 3;
}

// a class path entry as defined in sbt dependencyClasspath
message ClasspathEntry {
    // a relative path to a class directory or a jar file starting at the repository root
    required string path = 1;
    // library groupId
    required string group_id = 2;
    // library artifactId
    required string artifact_id = 3;
    // library versionId
    required string version = 4;
    // compile or test
    required string scope = 5;
    // is it an module local compilation target
    required bool internal = 6;
    // true for managed entry
    required bool managed = 7;
    // has it been explicitly defined in the build description (e.g. in build.sbt)
    required bool transitive = 8;
}

message Project {
    // a project identifier as <gh-organization>--<gh-repo-name>
    required string project_id = 1;
    // sbt version
    required string sbt_version = 2;
    // a list of contained modules
    map <string, Module> modules = 3;
}

message Module {
    // a module identifier
    required string module_id = 1;
    // an identifier of a project it belongs to
    required string project_id = 2;
    // module's groupId
    required string group_id = 3;
    // module's artifactId
    required string artifact_id = 4;
    // module's version
    required string version = 5;
    // current commit
    required string commit = 6;
    // scala version
    required string scala_version = 7;
    // configured paths (both source paths and class paths)
    map<string, PathEntry> paths = 8;
    // all discovered declarations (implicit with their dependencies)
    map<string, Declaration> declarations = 9;
    // all call sites involving implicits
    repeated CallSite implicit_call_sites = 10;
    // number of all call sites
    required int32 call_sites_count = 11;
}

message Declaration {
    enum Kind {
        DEF = 0;
        VAL = 1;
        VAR = 2;
        TYPE = 3;
        CLASS = 4;
        TRAIT = 5;
        OBJECT = 6;
        INTERFACE = 7;
        ENUM = 8;
        MACRO = 9;
        TYPE_PARAMETER = 10;
        PARAMETER = 11;
    };

    enum Access {
        PRIVATE = 0;
        PRIVATE_THIS = 1;
        PRIVATE_WITHIN = 2;
        PROTECTED = 3;
        PROTECTED_THIS = 4;
        PROTECTED_WITHIN = 5;
        PUBLIC = 6;
        NOT_SPECIFIED = 7;
    };

    // a fully qualified named of the term (e.g. scala/Int#.) as reported by semanticdb
    required string declaration_id = 1;
    // an identifier of a module it was discovered from
    required string module_id = 2;
    required Kind kind = 3;
    required int32 properties = 4;
    required string name = 5;
    required Access access = 6;
    // where it was defined - this might be a completely different module
    required Location location = 7;
    required Language language = 8;
    repeated TypeRef annotations = 9;
    required Signature signature = 10;
}

message Signature {
    oneof sealed_value {
        TypeSignature type = 1;
        ClassSignature clazz = 2;
        MethodSignature method = 3;
        ValueSignature value = 4;
    }
}

message MethodSignature {
    repeated TypeRef type_parameters = 3;
    repeated ParameterList parameter_lists = 4;
    required TypeRef return_type = 5;
}

message TypeSignature {
    repeated TypeRef type_parameters = 1;
    optional TypeRef upper_bound = 2;
    optional TypeRef lower_bound = 3;
}

message ClassSignature {
    repeated TypeRef type_parameters = 1;
    repeated TypeRef parents = 2;
}

message ValueSignature {
    required TypeRef tpe = 1;
}

message ParameterList {
    repeated Parameter parameters = 1;
}

message Parameter {
    required string name = 1;
    required TypeRef tpe = 2;
    required bool isImplicit = 3;
}

message TypeRef {
    required string declaration_id = 1;
    repeated TypeRef type_arguments = 2;
}

message CallSite {
    // an unique call site ID
    required int32 call_site_id = 1;
    // id of the parent call site in the case it is nested
    optional int32 parent_id = 2;
    // an identifier of a module this callsite belongs to
    required string module_id = 3;
    // what is being called
    required string declaration_id = 4;
    // the call source code
    required string code = 5;
    // location of the callsite
    required Location location = 6;
    // resolved type arguments
    repeated TypeRef type_arguments = 7;
    // types of implicit arguments (if any)
    // this is just an approximation
    // there are cases this will not work:
    // - implicit arguments expanded from macros (cf. #22)
    // - local implicit arguments (cf. #21)
    repeated Argument implicit_argument_types = 8;
}

message Argument {
    oneof sealed_value {
        ValueRef value_ref = 1;
        CallSiteRef callsite_ref = 2;
    }
}

message ValueRef {
    required string declaration_id = 1;
}

message CallSiteRef {
    required int32 callsite_id = 1;
}