include $(dir $(abspath $(lastword $(MAKEFILE_LIST))))/Makevars
SHELL := /bin/bash

SBT_MEM := 16000
# absolute path to the ivy2 directory
#GLOBAL_IVY_CACHE_DIR := /mnt/nvme1/scala/ivy
# absolute path to the prepopulated sbt-boot directory 
GLOBAL_SBT_BOOT_DIR := /mnt/nvme1/scala/sbt-boot

#ANALYSIS_DIR := _analysis_
#IVY_DIR := .ivy
SBT_BOOT_DIR := .sbt-boot
COMPILE := $(ANALYSIS_DIR)/compile.status
SEMANTICDB := $(ANALYSIS_DIR)/semanticdb.status
METADATA := $(ANALYSIS_DIR)/versions.csv $(ANALYSIS_DIR)/source-directories.csv $(ANALYSIS_DIR)/classpath.csv
SLOC := $(ANALYSIS_DIR)/sloc.csv

ALL := $(ANALYSIS_DIR) \
       $(IVY_DIR) \
	   $(SBT_BOOT_DIR) \
       $(SEMANTICDB) \
	   $(SDB_CONFIG) \
	   $(SLOC_FULL) \
       $(SLOC_UNIQUE)

SBT := sbt -batch -ivy $(IVY_DIR) -sbt-boot $(SBT_BOOT_DIR) -mem $(SBT_MEM) -Dsbt.log.noformat=true -Djline.terminal=jline.UnsupportedTerminal

bootstrap := $(ANALYSIS_DIR) $(IVY_DIR) $(SBT_BOOT_DIR)

.PHONY: all bootstrap semanticdb metadata compile ivy clean sbtclean distclean sloc

# this is here so we prevent a duplication in clean/distclean
# I don't know how to call a target post-priory
define clean =
-rm -fr $(ALL)
endef

all: $(ALL)

$(ANALYSIS_DIR):
	mkdir -p $(ANALYSIS_DIR)

$(SBT_BOOT_DIR):
	mkdir -p $(SBT_BOOT_DIR)
	ls -1 $(GLOBAL_SBT_BOOT_DIR) | parallel ln -sf "$(GLOBAL_SBT_BOOT_DIR)/{1}" "$(SBT_BOOT_DIR)/${1}"

$(METADATA): $(bootstrap)
	$(SBT) 'metadata'

$(SLOC): $(ANALYSIS_DIR)
	cloc --quiet --csv . | sed 's/,".*$///' | tail -n +2 > $(SLOC)

$(COMPILE): $(bootstrap)
	$(SBT) compile; echo "$$?" > $(COMPILE)
	find . -name "*.class" -delete

$(SEMANTICDB): $(bootstrap)
	$(SBT) semanticdb; \
    echo -e "exitcode,duration\n$$?,$$SECONDS" > $(SEMANTICDB)

metadata: $(METADATA)
compile: $(COMPILE)
semanticdb: $(SEMANTICDB)
ivy: $(IVY_DIR)
sloc: $(SLOC)

gitclean:
	git clean -fdx

sbtclean:
	-$(SBT) clean

clean:
	$(clean)

distclean: $(IVY_DIR)
	-$(SBT) clean
	$(clean)

#$(OUTPUT_DIR)/def-macros-output.csv:
#$(ANALYZER_DIR)/bin/macro-def-analysis.sh .

