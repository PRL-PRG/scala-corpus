# -*- mode: makefile -*-

include $(dir $(abspath $(lastword $(MAKEFILE_LIST))))/Makevars
SHELL := /bin/bash

METADATA := $(ANALYSIS_DIR)/versions.csv $(ANALYSIS_DIR)/source-directories.csv $(ANALYSIS_DIR)/classpath.csv $(ANALYSIS_DIR)/cleanpaths.csv
SLOC := $(ANALYSIS_DIR)/sloc.csv

ALL := $(ANALYSIS_DIR) \
       $(IVY_DIR) \
	   $(SBT_BOOT_DIR) \
       $(SEMANTICDB) \
	   $(SDB_CONFIG) \
	   $(SLOC_FULL) \
       $(SLOC_UNIQUE)

SBT := sbt -batch -ivy $(IVY_DIR) -sbt-boot $(SBT_BOOT_DIR) -mem $(SBT_MEM) -Dsbt.log.noformat=true -Djline.terminal=jline.UnsupportedTerminal

bootstrap := $(ANALYSIS_DIR) $(IVY_DIR) $(SBT_BOOT_DIR)

.PHONY: all bootstrap semanticdb metadata compile ivy clean sbtclean distclean sloc

# this is here so we prevent a duplication in clean/distclean
# I don't know how to call a target post-priory
define clean =
-rm -fr $(ALL)
endef

all: $(ALL)

$(ANALYSIS_DIR):
	mkdir -p $(ANALYSIS_DIR)

$(METADATA): $(bootstrap)
	$(SBT) 'metadata'

$(SLOC): $(ANALYSIS_DIR)
	cloc --quiet --csv . | sed 's/,".*$///' | tail -n +2 > $(SLOC)

$(COMPILE): $(bootstrap)
	$(SBT) clean compile; \
    exit_code=$$?; \
    echo -e "project,exitcode,duration\n$(notdir $(CURDIR)),$$exit_code,$$SECONDS" > $(COMPILE); \
    exit $$exit_code

$(SEMANTICDB): $(bootstrap)
	$(SBT) clean semanticdb; \
    exit_code=$$?; \
    echo -e "project,exitcode,duration\n$(notdir $(CURDIR)),$$exit_code,$$SECONDS" > $(SEMANTICDB); \
    exit $$exit_code

metadata: $(METADATA)
compile: $(COMPILE)
semanticdb: $(SEMANTICDB)
ivy: $(IVY_DIR)
sloc: $(SLOC)

classclean:
	find . -type d -name "target" | parallel find "{1}" -type f -name "\*.class" -delete

gitclean:
	git clean -fdx

sbtclean:
	-$(SBT) clean

clean:
	$(clean)

distclean: $(IVY_DIR)
	-$(SBT) clean
	$(clean)
